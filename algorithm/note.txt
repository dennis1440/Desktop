Algorithm: is a detailed step by step process you take to solve a problem.
    when writting an algorithm for a problem, you must ensure that anything problem is well understood before you start wrtting anything


big O: is concept in coding that is use to measure the efficiency of an algorithm,
             this has to do with measuring the time complexity and space complexity of the algorithm


time complexity: This involves measuring the time it takes for an algorithm to accomplish a task;


Space complexity: This involes measuring the amount of space an algorithm will use in trying to solve a problem.


          TIME COMPLEXITY
1.  CONSTANT TIME 0(1): The time an algorithm take to execute a task is fixed respective of the the size of input.
2.  LINEAR TIME 0(n): The time an algorithm takes to execute a task will increase little by little as the size of input begins to increase
3.  EXPONENTIAL TIME 0(2^n): This means the time and algorithm take to execute will incresae exponentially as the size of input increase


          SPACE COMPLEXITY
1. wORST- CASE: This is the maximum amount of space required by an Algorithm to run efficiency.
2. BEST-CASE:   This is the minimum amount of space required by an algorithm to run efficiency.
3. AVERAGE-CASE:   Somewhere in-between worst-case and best-case;


             PARTS OF AND ALGORITHM
1.  NAME OF ALGORITHM: Every Algorithm must have a name,
2. INPUTS: The external data or paramter needed by the algorithm to compute properly
3. ALGORITHM BODY: This is where you write the logic on how to complete the task4.
4. VARIABLE DECLARATION: The local variables declared within the algorithm body
5. STEPS: The process taken in other for the algorithm to comput the expected outcome
6. OUTPUT: The expected outcome of the algorithm.







